/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import classes.AmostraQuantitativa;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jehym
 */
public class AmostrasQuant extends javax.swing.JFrame {

    ArrayList<AmostraQuantitativa> amostras;
    int indexAmostras = -1;
    String nomeAmostra;

    /**
     * Creates new form AmostrasQuant
     */
    public AmostrasQuant() {
        initComponents();
    }

    public void disativa(boolean tipo) {
        B_DupValor.enable(tipo);
        B_ExcluiValor.enable(tipo);
        B_ExcluirAmostra.enable(tipo);
        B_InsereValor.enable(tipo);
        B_Pesquisar.enable(tipo);
        TF_Pesquisa.enable(tipo);
        T_Amostras.enable(tipo);
        P_Amostras.enable(tipo);
    }

    public void ativa(boolean tipo) {
        B_DupValor.enable(tipo);
        B_DupValor.show(tipo);
        B_ExcluiValor.enable(tipo);
        B_ExcluirAmostra.enable(tipo);
        B_InsereValor.enable(tipo);
        B_Pesquisar.enable(tipo);
        TF_Pesquisa.enable(tipo);
        T_Amostras.enable(tipo);
        P_Amostras.enable(tipo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        B_NovaAmostra = new javax.swing.JButton();
        P_Amostras = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        T_Amostras = new javax.swing.JTable();
        B_InsereValor = new javax.swing.JButton();
        B_DupValor = new javax.swing.JButton();
        B_ExcluiValor = new javax.swing.JButton();
        B_LimparTabela = new javax.swing.JButton();
        B_ExcluirAmostra = new javax.swing.JButton();
        B_Cancelar = new javax.swing.JButton();
        TF_Pesquisa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        B_Pesquisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        B_NovaAmostra.setText("Nova Amostra");
        B_NovaAmostra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_NovaAmostraActionPerformed(evt);
            }
        });

        P_Amostras.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        T_Amostras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Amostra", "Valores"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(T_Amostras);

        B_InsereValor.setText("Inserir Valor");
        B_InsereValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_InsereValorActionPerformed(evt);
            }
        });

        B_DupValor.setText("Duplicar Valor");

        B_ExcluiValor.setText("Excluir Valor");

        B_LimparTabela.setText("Limpar Tabela");
        B_LimparTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_LimparTabelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout P_AmostrasLayout = new javax.swing.GroupLayout(P_Amostras);
        P_Amostras.setLayout(P_AmostrasLayout);
        P_AmostrasLayout.setHorizontalGroup(
            P_AmostrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(P_AmostrasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(P_AmostrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(P_AmostrasLayout.createSequentialGroup()
                        .addComponent(B_InsereValor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B_DupValor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B_ExcluiValor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(B_LimparTabela)))
                .addContainerGap())
        );
        P_AmostrasLayout.setVerticalGroup(
            P_AmostrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(P_AmostrasLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(P_AmostrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B_InsereValor)
                    .addComponent(B_DupValor)
                    .addComponent(B_ExcluiValor)
                    .addComponent(B_LimparTabela))
                .addContainerGap())
        );

        B_ExcluirAmostra.setText("Excluir Amostra");

        B_Cancelar.setText("Cancelar");
        B_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_CancelarActionPerformed(evt);
            }
        });

        jLabel1.setText("Valor:");

        B_Pesquisar.setText("Pesquisar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(P_Amostras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(B_NovaAmostra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B_ExcluirAmostra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(B_Cancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TF_Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B_Pesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TF_Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(B_Pesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(P_Amostras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B_NovaAmostra)
                    .addComponent(B_ExcluirAmostra)
                    .addComponent(B_Cancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void B_LimparTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_LimparTabelaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B_LimparTabelaActionPerformed

    private void B_NovaAmostraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_NovaAmostraActionPerformed
        // TODO add your handling code here:]
        nomeAmostra = JOptionPane.showInputDialog("Digite o nome da Amostra.");
        DefaultTableModel modelo = (DefaultTableModel) T_Amostras.getModel();

        try {
            if (nomeAmostra.equals("") || nomeAmostra.isEmpty()) {
                JOptionPane.showMessageDialog(null, "O nome n√£o pode ser nulo.\n Tente novamente.", "ERRO", 0);
            } else {
                if(amostras==null){
                    amostras = new ArrayList();
                    amostras.add(new AmostraQuantitativa(nomeAmostra));
                    indexAmostras++;
                }else{
                    amostras.add(new AmostraQuantitativa(nomeAmostra));
                    indexAmostras++;
                }
            }
        } catch (NullPointerException ex) {

        }

    }//GEN-LAST:event_B_NovaAmostraActionPerformed

    private void B_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_CancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_B_CancelarActionPerformed

    private void B_InsereValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_InsereValorActionPerformed
        ArrayList<String> itens = new ArrayList();
        
        String item = null;
        DefaultTableModel modelo = (DefaultTableModel)T_Amostras.getModel();
        
        String valores = JOptionPane.showInputDialog(this, "Digite o item a ser adicionado separados por ';'\n para a amostra"
                + " " + nomeAmostra + ":", "Adicionar item", JOptionPane.QUESTION_MESSAGE);

        String[] amostra = valores.split(Pattern.quote(";"));
        
        for(int i = 0; i<modelo.getRowCount(); i++){
            itens.add(String.valueOf(modelo.getValueAt(i, 1)));
        }
        
         for(int i = 0; i<amostra.length; i++){
            itens.add(amostra[i]);
        }
        
        modelo.setRowCount(itens.size());
        
        for(int i = 0; i<amostras.size(); i++){
            for(int j = 0; j<itens.size(); j++){
                //if(){
                    
                //}
            }
            amostras.get(i).insereAmostra(Double.parseDouble(itens.get(i)));
        }
        
        for(int i = 0; i<modelo.getRowCount(); i++){
//            modelo.setValueAt(novaAmostra.getNomeAmostra(), i, 0);
            modelo.setValueAt(itens.get(i), i, 1);
        }
        
        T_Amostras.setModel(modelo);
        /*
        Falta s√≥ colocar os valores de amostra na lista e mostrar na tabela
        */

    }//GEN-LAST:event_B_InsereValorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AmostrasQuant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AmostrasQuant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AmostrasQuant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AmostrasQuant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AmostrasQuant().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_Cancelar;
    private javax.swing.JButton B_DupValor;
    private javax.swing.JButton B_ExcluiValor;
    private javax.swing.JButton B_ExcluirAmostra;
    private javax.swing.JButton B_InsereValor;
    private javax.swing.JButton B_LimparTabela;
    private javax.swing.JButton B_NovaAmostra;
    private javax.swing.JButton B_Pesquisar;
    private javax.swing.JPanel P_Amostras;
    private javax.swing.JTextField TF_Pesquisa;
    private javax.swing.JTable T_Amostras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
